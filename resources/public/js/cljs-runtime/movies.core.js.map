{"version":3,"sources":["movies/core.cljs"],"mappings":";AAQA,kBAAA,lBAAMA;AAAN,AACE,IAAMC,OAAK,gDAAA,2CAAA,yDAAA,pJAACC;AAAZ,AAAA,0FAAA,yGAAA,pCAEG,AAACC,8BAAWF,yFACX,AAACG,wBAAOH;;AAEd,8BAAA,9BAAMI;AAAN,AACE,2BAAA,pBAACC;;AAEH,oBAAA,pBAAMC,gDAAOC;AAAb,AACE,wDAAA,jDAACC,oIAAaT,wBAAKQ;;AAErB,gCAAA,hCAAME;AAAN,AACE,IAAAC,qBAAc,AAACN;AAAf,AAAA,oBAAAM;AAAA,AAAA,SAAAA,LAAWH;AAAX,AACE,OAACD,kBAAMC;;AADT;;;AAKF,AAACE","names":["movies.core/app","mode","reagent.core.atom","movies.comp.header/navigation","movies.comp.body/movies","movies.core/get-app-element","goog.dom/getElement","movies.core/mount","el","reagent.dom.render","movies.core/mount-app-element","temp__5804__auto__"],"sourcesContent":["(ns movies.core\n  (:require\n   [goog.dom :as gdom]\n   [reagent.dom :as rdom]\n   [reagent.core :as r]\n   [movies.comp.body :refer [movies]]\n   [movies.comp.header :refer [navigation]]))\n\n(defn app []\n  (let [mode (r/atom {:active \"year\"})]\n    [:div.bg-light\n     (navigation mode)\n     [(movies mode)]]))\n\n(defn get-app-element []\n  (gdom/getElement \"app\"))\n\n(defn mount [el]\n  (rdom/render [app] el))\n\n(defn mount-app-element []\n  (when-let [el (get-app-element)]\n    (mount el)))\n\n;; conditionally start your application based on the presence of an \"app\" element\n;; this is particularly helpful for testing this ns without launching the app\n(mount-app-element)\n\n;; ;; specify reload hook with ^:after-load metadata\n;; (defn ^:after-load on-reload []\n;;   (mount-app-element))\n;; (rd/render [hello-world]\n;;            (. js/document (getElementById \"app\")))\n\n;; (defn on-js-reload [])\n  ;; optionally touch your app-state to force rerendering depending on\n  ;; your application\n  ;; (swap! app-state update-in [:__figwheel_counter] inc)\n"]}